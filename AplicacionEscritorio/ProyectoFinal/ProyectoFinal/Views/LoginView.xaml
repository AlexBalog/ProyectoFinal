<Window x:Class="ProyectoFinal.Views.LoginView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ProyectoFinal.Views"
        xmlns:viewmodels="clr-namespace:ProyectoFinal.ViewModels"
        mc:Ignorable="d"
        Title="FitSphere - Login" Height="600" Width="450"
        WindowStyle="None" 
        ResizeMode="NoResize"
        WindowStartupLocation="CenterScreen"
        Background="Transparent"
        AllowsTransparency="True"
        Loaded="Window_Loaded">

    <Window.DataContext>
        <viewmodels:LoginViewModel/>
    </Window.DataContext>

    <Window.Resources>
        <!-- Convertidor Boolean a Visibility -->
        <BooleanToVisibilityConverter x:Key="BoolToVis"/>

        <!-- Colores Base -->
        <Color x:Key="PrimaryColor">#8A2BE2</Color>
        <!-- Morado principal -->
        <Color x:Key="PrimaryLightColor">#B876F1</Color>
        <!-- Morado claro -->
        <Color x:Key="PrimaryDarkColor">#6A1B9A</Color>
        <!-- Morado oscuro -->
        <Color x:Key="BackgroundColor">#121212</Color>
        <!-- Negro fondo -->
        <Color x:Key="SurfaceColor">#1E1E1E</Color>
        <!-- Negro superficie -->
        <Color x:Key="TextColorPrimary">#FFFFFF</Color>
        <!-- Texto blanco -->
        <Color x:Key="TextColorSecondary">#E0E0E0</Color>
        <!-- Texto gris claro -->
        <Color x:Key="ErrorColor">#FF5252</Color>
        <!-- Rojo error -->

        <!-- Brushes -->
        <SolidColorBrush x:Key="PrimaryBrush" Color="{StaticResource PrimaryColor}"/>
        <SolidColorBrush x:Key="PrimaryLightBrush" Color="{StaticResource PrimaryLightColor}"/>
        <SolidColorBrush x:Key="PrimaryDarkBrush" Color="{StaticResource PrimaryDarkColor}"/>
        <SolidColorBrush x:Key="BackgroundBrush" Color="{StaticResource BackgroundColor}"/>
        <SolidColorBrush x:Key="SurfaceBrush" Color="{StaticResource SurfaceColor}"/>
        <SolidColorBrush x:Key="TextBrushPrimary" Color="{StaticResource TextColorPrimary}"/>
        <SolidColorBrush x:Key="TextBrushSecondary" Color="{StaticResource TextColorSecondary}"/>
        <SolidColorBrush x:Key="ErrorBrush" Color="{StaticResource ErrorColor}"/>

        <!-- Animaciones -->
        <Storyboard x:Key="LogoAnimation">
            <DoubleAnimation
                Storyboard.TargetName="LogoScale"
                Storyboard.TargetProperty="ScaleX"
                From="0.2" To="1.0" Duration="0:0:0.7">
                <DoubleAnimation.EasingFunction>
                    <ElasticEase EasingMode="EaseOut" Oscillations="2" Springiness="5"/>
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
            <DoubleAnimation
                Storyboard.TargetName="LogoScale"
                Storyboard.TargetProperty="ScaleY"
                From="0.2" To="1.0" Duration="0:0:0.7">
                <DoubleAnimation.EasingFunction>
                    <ElasticEase EasingMode="EaseOut" Oscillations="2" Springiness="5"/>
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
            <DoubleAnimation
                Storyboard.TargetName="LogoScale"
                Storyboard.TargetProperty="Opacity"
                From="0" To="1" Duration="0:0:0.5"/>
        </Storyboard>

        <Storyboard x:Key="ControlsAnimation">
            <DoubleAnimation
                Storyboard.TargetName="ControlsPanel"
                Storyboard.TargetProperty="Opacity"
                From="0" To="1" Duration="0:0:0.8"
                BeginTime="0:0:0.3"/>
            <ThicknessAnimation
                Storyboard.TargetName="ControlsPanel"
                Storyboard.TargetProperty="Margin"
                From="0,50,0,0" To="0,20,0,0" Duration="0:0:0.8"
                BeginTime="0:0:0.3">
                <ThicknessAnimation.EasingFunction>
                    <CubicEase EasingMode="EaseOut"/>
                </ThicknessAnimation.EasingFunction>
            </ThicknessAnimation>
        </Storyboard>

        <Storyboard x:Key="ButtonAnimation">
            <DoubleAnimation
                Storyboard.TargetProperty="Opacity"
                From="0" To="1" Duration="0:0:0.5"/>
            <DoubleAnimation
                Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)"
                From="0.8" To="1" Duration="0:0:0.5">
                <DoubleAnimation.EasingFunction>
                    <BackEase EasingMode="EaseOut" Amplitude="0.3"/>
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
            <DoubleAnimation
                Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)"
                From="0.8" To="1" Duration="0:0:0.5">
                <DoubleAnimation.EasingFunction>
                    <BackEase EasingMode="EaseOut" Amplitude="0.3"/>
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
        </Storyboard>

        <!-- Estilos para botón principal -->
        <Style x:Key="PrimaryButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="{StaticResource PrimaryBrush}"/>
            <Setter Property="Foreground" Value="{StaticResource TextBrushPrimary}"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Height" Value="45"/>
            <Setter Property="Width" Value="200"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect BlurRadius="15" Direction="270" ShadowDepth="2" Opacity="0.5" Color="#8A2BE2"/>
                </Setter.Value>
            </Setter>
            <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
            <Setter Property="RenderTransform">
                <Setter.Value>
                    <ScaleTransform ScaleX="1" ScaleY="1"/>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" 
                                CornerRadius="22.5"
                                Padding="15,5">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource PrimaryLightBrush}"/>
                    <Setter Property="RenderTransform">
                        <Setter.Value>
                            <ScaleTransform ScaleX="1.05" ScaleY="1.05"/>
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="{StaticResource PrimaryDarkBrush}"/>
                    <Setter Property="RenderTransform">
                        <Setter.Value>
                            <ScaleTransform ScaleX="0.95" ScaleY="0.95"/>
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Opacity" Value="0.7"/>
                    <Setter Property="Effect">
                        <Setter.Value>
                            <DropShadowEffect BlurRadius="10" Direction="270" ShadowDepth="1" Opacity="0.3" Color="#8A2BE2"/>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Estilo para botón secundario -->
        <Style x:Key="SecondaryButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{StaticResource PrimaryLightBrush}"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Height" Value="40"/>
            <Setter Property="Width" Value="200"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
            <Setter Property="RenderTransform">
                <Setter.Value>
                    <ScaleTransform ScaleX="1" ScaleY="1"/>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" 
                                CornerRadius="20"
                                Padding="15,5">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" Value="{StaticResource PrimaryBrush}"/>
                    <Setter Property="RenderTransform">
                        <Setter.Value>
                            <ScaleTransform ScaleX="1.05" ScaleY="1.05"/>
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="RenderTransform">
                        <Setter.Value>
                            <ScaleTransform ScaleX="0.95" ScaleY="0.95"/>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Estilo para TextBox -->
        <Style x:Key="ModernTextBox" TargetType="{x:Type TextBox}">
            <Setter Property="Height" Value="45"/>
            <Setter Property="Foreground" Value="{StaticResource TextBrushPrimary}"/>
            <Setter Property="Background" Value="{StaticResource SurfaceBrush}"/>
            <Setter Property="CaretBrush" Value="{StaticResource PrimaryBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="#333333"/>
            <Setter Property="Padding" Value="10,0,0,0"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="22.5">
                            <Grid>
                                <TextBlock x:Name="Placeholder" 
                                           Text="{TemplateBinding Tag}" 
                                           Foreground="#999999" 
                                           Visibility="Collapsed"
                                           VerticalAlignment="Center"
                                           Margin="10,0,0,0"/>
                                <ScrollViewer x:Name="PART_ContentHost" 
                                              Margin="{TemplateBinding Padding}" 
                                              VerticalAlignment="Center"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Text" Value="">
                                <Setter Property="Visibility" TargetName="Placeholder" Value="Visible"/>
                            </Trigger>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter Property="BorderBrush" Value="{StaticResource PrimaryBrush}"/>
                                <Setter Property="BorderThickness" Value="2"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Estilo para PasswordBox -->
        <Style x:Key="ModernPasswordBox" TargetType="{x:Type PasswordBox}">
            <Setter Property="Height" Value="45"/>
            <Setter Property="Foreground" Value="{StaticResource TextBrushPrimary}"/>
            <Setter Property="Background" Value="{StaticResource SurfaceBrush}"/>
            <Setter Property="CaretBrush" Value="{StaticResource PrimaryBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="#333333"/>
            <Setter Property="Padding" Value="10,0,0,0"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type PasswordBox}">
                        <Border Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="22.5">
                            <Grid>
                                <TextBlock x:Name="Placeholder" 
                                           Text="{TemplateBinding Tag}" 
                                           Foreground="#999999" 
                                           Visibility="Collapsed"
                                           VerticalAlignment="Center"
                                           Margin="10,0,0,0"/>
                                <ScrollViewer x:Name="PART_ContentHost" 
                                              Margin="{TemplateBinding Padding}" 
                                              VerticalAlignment="Center"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter Property="BorderBrush" Value="{StaticResource PrimaryBrush}"/>
                                <Setter Property="BorderThickness" Value="2"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Estilo para CheckBox -->
        <Style x:Key="ModernCheckBox" TargetType="{x:Type CheckBox}">
            <Setter Property="Foreground" Value="{StaticResource TextBrushSecondary}"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Border x:Name="checkboxBorder" 
                                    Width="18" Height="18" 
                                    Background="{StaticResource SurfaceBrush}" 
                                    BorderBrush="#333333" 
                                    BorderThickness="1" 
                                    CornerRadius="3" 
                                    Margin="0,0,5,0">
                                <Path x:Name="checkMark" 
                                      Fill="{StaticResource PrimaryBrush}" 
                                      Data="M4,10 L8,14 L14,4" 
                                      Stretch="Uniform" 
                                      Margin="3" 
                                      Visibility="Collapsed"/>
                            </Border>
                            <ContentPresenter Grid.Column="1" 
                                              VerticalAlignment="Center" 
                                              HorizontalAlignment="Left"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="checkMark" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="checkboxBorder" Property="BorderBrush" Value="{StaticResource PrimaryBrush}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="checkboxBorder" Property="BorderBrush" Value="{StaticResource PrimaryBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Estilo para botón de ventana -->
        <Style x:Key="WindowButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Width" Value="30"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{StaticResource TextBrushSecondary}"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" 
                                CornerRadius="15">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#333333"/>
                    <Setter Property="Cursor" Value="Hand"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Estilo para botón de cierre -->
        <Style x:Key="CloseButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource WindowButtonStyle}">
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#F44336"/>
                    <Setter Property="Foreground" Value="White"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Estilo para Título -->
        <Style x:Key="TitleStyle" TargetType="{x:Type TextBlock}">
            <Setter Property="FontSize" Value="24"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Foreground" Value="{StaticResource PrimaryBrush}"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Margin" Value="0,20,0,10"/>
        </Style>

        <!-- Estilo para botones simples (TextButton) -->
        <Style x:Key="TextButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Foreground" Value="{StaticResource PrimaryLightBrush}"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" Value="{StaticResource PrimaryBrush}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>

    <!-- Ventana principal -->
    <Border CornerRadius="15" Background="{StaticResource BackgroundBrush}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="30"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <!-- Barra de título personalizada -->
            <Border Grid.Row="0" Background="{StaticResource SurfaceBrush}" MouseLeftButtonDown="Border_MouseDown" CornerRadius="15,15,0,0">
                <Grid>
                    <TextBlock Text="FitSphere" Foreground="{StaticResource PrimaryBrush}" FontWeight="Medium" VerticalAlignment="Center" Margin="10,0,0,0"/>
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                        <Button x:Name="btnMinimize" Click="BtnMinimize_Click" Style="{StaticResource WindowButtonStyle}" Content="_" FontWeight="Bold" Padding="0,0,0,4"/>
                        <Button x:Name="btnClose" Click="BtnClose_Click" Style="{StaticResource CloseButtonStyle}" Content="✕" FontWeight="Bold"/>
                    </StackPanel>
                </Grid>
            </Border>

            <!-- Contenido principal -->
            <Grid Grid.Row="1" Margin="30,0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <!-- Logo -->
                    <RowDefinition Height="Auto"/>
                    <!-- Título -->
                    <RowDefinition Height="*"/>
                    <!-- Campos de formulario -->
                    <RowDefinition Height="Auto"/>
                    <!-- Botones adicionales -->
                </Grid.RowDefinitions>

                <!-- Logo -->
                <Grid Grid.Row="0" Margin="0,20,0,0">
                    <Grid.RenderTransform>
                        <ScaleTransform x:Name="LogoScale" ScaleX="1" ScaleY="1"/>
                    </Grid.RenderTransform>
                    <Image x:Name="LogoImage" Source="/ProyectoFinal;component/Resources/logo.png" Width="120" Height="120" Stretch="Uniform"/>
                </Grid>

                <!-- Título -->
                <TextBlock Grid.Row="1" Text="FitSphere" Style="{StaticResource TitleStyle}" />

                <!-- Campos de formulario -->
                <StackPanel Grid.Row="2" x:Name="ControlsPanel" Opacity="1" Margin="0,20,0,0">
                    <TextBlock Text="Correo electrónico" Foreground="{StaticResource TextBrushSecondary}" FontSize="13" Margin="5,0,0,5"/>
                    <TextBox Style="{StaticResource ModernTextBox}" 
                             Tag="Correo electrónico"
                             Text="{Binding Email, UpdateSourceTrigger=PropertyChanged}"
                             Margin="0,0,0,15"/>

                    <TextBlock Text="Contraseña" Foreground="{StaticResource TextBrushSecondary}" FontSize="13" Margin="5,0,0,5"/>
                    <Grid Margin="0,0,0,10">
                        <PasswordBox x:Name="passwordBox" 
                                   Style="{StaticResource ModernPasswordBox}" 
                                   Tag="Contraseña"
                                   PasswordChanged="PasswordBox_PasswordChanged"/>
                        <Button x:Name="ShowPasswordButton" 
                                Width="30" Height="45" 
                                HorizontalAlignment="Right" 
                                Background="Transparent" 
                                BorderThickness="0"
                                Margin="0,0,5,0"
                                Click="ShowPasswordButton_Click"
                                Panel.ZIndex="1">
                            <!-- Colocamos el botón por encima con Panel.ZIndex -->
                            <TextBlock x:Name="EyeIcon" Text="👁" FontSize="16" Foreground="{StaticResource TextBrushSecondary}"/>
                        </Button>
                    </Grid>

                    <!-- Opciones adicionales -->
                    <Grid Margin="0,5,0,20">
                        <CheckBox Content="Recordarme" 
                                 Style="{StaticResource ModernCheckBox}"
                                 IsChecked="{Binding RememberMe}" 
                                 HorizontalAlignment="Left"/>

                        <Button Content="¿Olvidó su contraseña?" 
                                Style="{StaticResource TextButtonStyle}"
                                Command="{Binding ForgotPasswordCommand}"
                                HorizontalAlignment="Right"
                                Width="Auto" 
                                Height="Auto"
                                Padding="0"/>
                    </Grid>

                    <!-- Botón de login -->
                    <Button x:Name="LoginButton" 
                            Content="Iniciar Sesión" 
                            Style="{StaticResource PrimaryButtonStyle}"
                            Command="{Binding LoginCommand}"
                            CommandParameter="{Binding ElementName=passwordBox}">
                        <Button.Triggers>
                            <EventTrigger RoutedEvent="Button.Loaded">
                                <BeginStoryboard Storyboard="{StaticResource ButtonAnimation}"/>
                            </EventTrigger>
                        </Button.Triggers>
                    </Button>

                    <!-- Indicador de progreso -->
                    <Grid Margin="0,20,0,0" HorizontalAlignment="Center">
                        <ProgressBar x:Name="LoginProgress" 
                                   Width="200" 
                                   Height="5" 
                                   Visibility="Collapsed"
                                   IsIndeterminate="True"
                                   Foreground="{StaticResource PrimaryBrush}"
                                   Background="#333333"/>
                    </Grid>
                </StackPanel>

                <!-- Botones adicionales -->
                <StackPanel Grid.Row="3" Orientation="Vertical" Margin="0,0,0,20">
                    <TextBlock Text="¿Aún no tienes cuenta?" 
                               Foreground="{StaticResource TextBrushSecondary}" 
                               FontSize="13" 
                               HorizontalAlignment="Center"
                               Margin="0,0,0,10"/>

                    <Button Content="Registrarse" 
                            Style="{StaticResource SecondaryButtonStyle}"
                            Command="{Binding RegisterCommand}"
                            Width="200"
                            Height="40"/>
                </StackPanel>

                <!-- Mensaje de error -->
                <Border x:Name="ErrorMessage" 
                        Grid.Row="2" 
                        Background="#301B1B" 
                        BorderBrush="#571C1C" 
                        BorderThickness="1"
                        CornerRadius="8"
                        Padding="10"
                        Margin="0,15,0,10"
                        Visibility="Collapsed"
                        VerticalAlignment="Bottom">
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="⚠️" Margin="0,0,10,0"/>
                        <TextBlock x:Name="ErrorText" 
                                   Text="Credenciales incorrectas. Intente nuevamente."
                                   Foreground="{StaticResource ErrorBrush}"
                                   TextWrapping="Wrap"/>
                    </StackPanel>
                </Border>
            </Grid>
        </Grid>
    </Border>
</Window>