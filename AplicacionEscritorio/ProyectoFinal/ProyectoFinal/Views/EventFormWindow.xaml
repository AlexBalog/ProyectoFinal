<Window x:Class="ProyectoFinal.Views.EventFormWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:viewmodels="clr-namespace:ProyectoFinal.ViewModels"
        xmlns:converters="clr-namespace:ProyectoFinal.Converters"
        mc:Ignorable="d"
        Title="{Binding WindowTitle}" 
        Height="600" Width="700"
        WindowStyle="None"
        ResizeMode="NoResize"
        WindowStartupLocation="CenterOwner"
        Background="Transparent"
        AllowsTransparency="True">

    <Window.Resources>
        <!-- Convertidores -->
        <converters:BoolToTextConverter x:Key="BoolToTextConverter"/>
        <BooleanToVisibilityConverter x:Key="BoolToVis"/>

        <!-- Colores y estilos base -->
        <Color x:Key="PrimaryColor">#8A2BE2</Color>
        <Color x:Key="BackgroundColor">#121212</Color>
        <Color x:Key="SurfaceColor">#1E1E1E</Color>
        <Color x:Key="TextColorPrimary">#FFFFFF</Color>
        <Color x:Key="TextColorSecondary">#E0E0E0</Color>
        <Color x:Key="AccentColor">#333333</Color>
        <Color x:Key="SuccessColor">#4CAF50</Color>
        <Color x:Key="ErrorColor">#F44336</Color>

        <SolidColorBrush x:Key="PrimaryBrush" Color="{StaticResource PrimaryColor}"/>
        <SolidColorBrush x:Key="BackgroundBrush" Color="{StaticResource BackgroundColor}"/>
        <SolidColorBrush x:Key="SurfaceBrush" Color="{StaticResource SurfaceColor}"/>
        <SolidColorBrush x:Key="TextBrushPrimary" Color="{StaticResource TextColorPrimary}"/>
        <SolidColorBrush x:Key="TextBrushSecondary" Color="{StaticResource TextColorSecondary}"/>
        <SolidColorBrush x:Key="AccentBrush" Color="{StaticResource AccentColor}"/>
        <SolidColorBrush x:Key="SuccessBrush" Color="{StaticResource SuccessColor}"/>
        <SolidColorBrush x:Key="ErrorBrush" Color="{StaticResource ErrorColor}"/>

        <!-- Estilo para labels -->
        <Style x:Key="FieldLabel" TargetType="TextBlock">
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Foreground" Value="{StaticResource TextBrushSecondary}"/>
            <Setter Property="Margin" Value="0,0,0,5"/>
            <Setter Property="FontSize" Value="12"/>
        </Style>

        <!-- Estilo para TextBox -->
        <Style x:Key="FormTextBox" TargetType="TextBox">
            <Setter Property="Height" Value="40"/>
            <Setter Property="Padding" Value="12,0"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Background" Value="{StaticResource SurfaceBrush}"/>
            <Setter Property="Foreground" Value="{StaticResource TextBrushPrimary}"/>
            <Setter Property="BorderBrush" Value="{StaticResource AccentBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Border Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="8">
                            <ScrollViewer x:Name="PART_ContentHost" 
                                          Margin="{TemplateBinding Padding}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsFocused" Value="True">
                    <Setter Property="BorderBrush" Value="{StaticResource PrimaryBrush}"/>
                    <Setter Property="BorderThickness" Value="2"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" Value="#2A2A2A"/>
                    <Setter Property="Foreground" Value="#666666"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Estilo para TextBox multilínea -->
        <Style x:Key="FormTextBoxMultiline" TargetType="TextBox" BasedOn="{StaticResource FormTextBox}">
            <Setter Property="Height" Value="100"/>
            <Setter Property="VerticalContentAlignment" Value="Top"/>
            <Setter Property="Padding" Value="12,10"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
            <Setter Property="AcceptsReturn" Value="True"/>
            <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
        </Style>

        <!-- Estilo para ComboBox -->
        <Style x:Key="FormComboBox" TargetType="ComboBox">
            <Setter Property="Height" Value="40"/>
            <Setter Property="Padding" Value="12,0"/>
            <Setter Property="Background" Value="{StaticResource SurfaceBrush}"/>
            <Setter Property="Foreground" Value="{StaticResource TextBrushPrimary}"/>
            <Setter Property="BorderBrush" Value="{StaticResource AccentBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <ToggleButton x:Name="ToggleButton"
                                  Background="{TemplateBinding Background}"
                                  BorderBrush="{TemplateBinding BorderBrush}"
                                  BorderThickness="{TemplateBinding BorderThickness}"
                                  Focusable="False"
                                  IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                  ClickMode="Press">
                                <ToggleButton.Template>
                                    <ControlTemplate TargetType="ToggleButton">
                                        <Border Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        CornerRadius="8">
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="*"/>
                                                    <ColumnDefinition Width="20"/>
                                                </Grid.ColumnDefinitions>
                                                <Path Grid.Column="1" 
                                              HorizontalAlignment="Center" 
                                              VerticalAlignment="Center"
                                              Data="M 0 0 L 4 4 L 8 0 Z" 
                                              Fill="{StaticResource TextBrushSecondary}"/>
                                            </Grid>
                                        </Border>
                                    </ControlTemplate>
                                </ToggleButton.Template>
                            </ToggleButton>

                            <ContentPresenter x:Name="ContentSite"
                                      IsHitTestVisible="False"
                                      Content="{TemplateBinding SelectionBoxItem}"
                                      ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                      ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                      Margin="12,0,25,0"
                                      VerticalAlignment="Center"
                                      HorizontalAlignment="Left"/>

                            <Popup x:Name="Popup"
                           Placement="Bottom"
                           IsOpen="{TemplateBinding IsDropDownOpen}"
                           AllowsTransparency="True"
                           Focusable="False"
                           PopupAnimation="Slide">
                                <Grid MaxHeight="200" MinWidth="{TemplateBinding ActualWidth}">
                                    <Border Background="{StaticResource SurfaceBrush}"
                                    BorderBrush="{StaticResource AccentBrush}"
                                    BorderThickness="1"
                                    CornerRadius="8">
                                        <ScrollViewer>
                                            <StackPanel IsItemsHost="True"/>
                                        </ScrollViewer>
                                    </Border>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsGrouping" Value="true">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsFocused" Value="True">
                    <Setter Property="BorderBrush" Value="{StaticResource PrimaryBrush}"/>
                    <Setter Property="BorderThickness" Value="2"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Estilo para ComboBoxItem -->
        <Style x:Key="ComboBoxItemStyle" TargetType="ComboBoxItem">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{StaticResource TextBrushPrimary}"/>
            <Setter Property="Padding" Value="12,8"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBoxItem">
                        <Border Background="{TemplateBinding Background}"
                        Padding="{TemplateBinding Padding}">
                            <ContentPresenter/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource AccentBrush}"/>
                </Trigger>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="{StaticResource PrimaryBrush}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Estilo para botones principales -->
        <Style x:Key="PrimaryButton" TargetType="Button">
            <Setter Property="Background" Value="{StaticResource PrimaryBrush}"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Height" Value="45"/>
            <Setter Property="MinWidth" Value="120"/>
            <Setter Property="Padding" Value="20,0"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" 
                                CornerRadius="8"
                                Padding="{TemplateBinding Padding}">
                            <ContentPresenter HorizontalAlignment="Center" 
                                              VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#9C27B0"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" Value="#666666"/>
                    <Setter Property="Cursor" Value="Arrow"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="SecondaryButton" TargetType="Button" BasedOn="{StaticResource PrimaryButton}">
            <Setter Property="Background" Value="{StaticResource AccentBrush}"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#555555"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Estilo para headers de sección -->
        <Style x:Key="SectionHeader" TargetType="TextBlock">
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Foreground" Value="{StaticResource PrimaryBrush}"/>
            <Setter Property="Margin" Value="0,0,0,15"/>
        </Style>

        <!-- Estilo para botones de ventana -->
        <Style x:Key="WindowButton" TargetType="Button">
            <Setter Property="Width" Value="30"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{StaticResource TextBrushSecondary}"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" 
                                CornerRadius="15">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#333333"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="CloseButton" TargetType="Button" BasedOn="{StaticResource WindowButton}">
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource ErrorBrush}"/>
                    <Setter Property="Foreground" Value="White"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>

    <!-- Ventana principal -->
    <Border CornerRadius="15" Background="{StaticResource BackgroundBrush}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="40"/>
                <!-- Header -->
                <RowDefinition Height="*"/>
                <!-- Content -->
                <RowDefinition Height="Auto"/>
                <!-- Actions -->
            </Grid.RowDefinitions>

            <!-- Header con título y botón cerrar -->
            <Border Grid.Row="0" Background="{StaticResource SurfaceBrush}" 
                    CornerRadius="15,15,0,0" MouseLeftButtonDown="Header_MouseDown">
                <Grid>
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center" Margin="15,0">
                        <TextBlock Text="📅" FontSize="16" Margin="0,0,10,0" Foreground="BlueViolet"/>
                        <TextBlock Text="{Binding WindowTitle}" 
                                   Foreground="{StaticResource TextBrushPrimary}" 
                                   FontWeight="SemiBold"/>
                    </StackPanel>

                    <Button x:Name="btnClose" 
                            Style="{StaticResource CloseButton}" 
                            Content="✕" 
                            HorizontalAlignment="Right" 
                            Margin="0,0,10,0"
                            Click="BtnClose_Click"/>
                </Grid>
            </Border>

            <!-- Contenido principal -->
            <ScrollViewer Grid.Row="1" VerticalScrollBarVisibility="Auto" Padding="30">
                <StackPanel MaxWidth="600">
                    <!-- Información del evento -->
                    <Border Background="{StaticResource SurfaceBrush}" 
                            CornerRadius="15" Padding="25" Margin="0,0,0,20">
                        <StackPanel>
                            <TextBlock Text="📋 Información del Evento" Style="{StaticResource SectionHeader}"/>

                            <!-- ID (solo en modo edición) -->
                            <StackPanel Margin="0,0,0,20"
                                       Visibility="{Binding IsEditMode, Converter={StaticResource BoolToVis}}">
                                <TextBlock Text="ID del Evento" Style="{StaticResource FieldLabel}"/>
                                <TextBox Text="{Binding Id}" Style="{StaticResource FormTextBox}" IsEnabled="False"/>
                            </StackPanel>

                            <!-- Nombre del evento -->
                            <StackPanel Margin="0,0,0,20">
                                <TextBlock Text="Nombre del Evento *" Style="{StaticResource FieldLabel}"/>
                                <TextBox Text="{Binding Nombre, UpdateSourceTrigger=PropertyChanged}" 
                                         Style="{StaticResource FormTextBox}"
                                         MaxLength="100"/>
                            </StackPanel>

                            <!-- Tipo de evento -->
                            <StackPanel Margin="0,0,0,20">
                                <TextBlock Text="Tipo de Evento *" Style="{StaticResource FieldLabel}"/>
                                <ComboBox SelectedItem="{Binding Tipo}" 
                                          Style="{StaticResource FormComboBox}"
                                          ItemContainerStyle="{StaticResource ComboBoxItemStyle}">
                                    <ComboBox.Items>
                                        <system:String xmlns:system="clr-namespace:System;assembly=mscorlib">Entrenamiento</system:String>
                                        <system:String xmlns:system="clr-namespace:System;assembly=mscorlib">Nutricion</system:String>
                                        <system:String xmlns:system="clr-namespace:System;assembly=mscorlib">Salud</system:String>
                                        <system:String xmlns:system="clr-namespace:System;assembly=mscorlib">Progreso</system:String>
                                        <system:String xmlns:system="clr-namespace:System;assembly=mscorlib">Competencia</system:String>
                                        <system:String xmlns:system="clr-namespace:System;assembly=mscorlib">Webinar</system:String>
                                        <system:String xmlns:system="clr-namespace:System;assembly=mscorlib">Taller</system:String>
                                        <system:String xmlns:system="clr-namespace:System;assembly=mscorlib">Charla</system:String>
                                        <system:String xmlns:system="clr-namespace:System;assembly=mscorlib">Conferencia</system:String>
                                        <system:String xmlns:system="clr-namespace:System;assembly=mscorlib">Otro</system:String>
                                    </ComboBox.Items>
                                </ComboBox>
                            </StackPanel>

                            <!-- Descripción del evento -->
                            <StackPanel Margin="0,0,0,10">
                                <TextBlock Text="Descripción del Evento" Style="{StaticResource FieldLabel}"/>
                                <TextBox Text="{Binding Descripcion, UpdateSourceTrigger=PropertyChanged}" 
                                         Style="{StaticResource FormTextBoxMultiline}"
                                         MaxLength="1000"/>
                                <TextBlock Text="Opcional. Máximo 1000 caracteres." 
                                           FontSize="10"
                                           Foreground="{StaticResource TextBrushSecondary}"
                                           Margin="0,5,0,0"/>
                            </StackPanel>
                        </StackPanel>
                    </Border>

                    <!-- Información adicional -->
                    <Border Background="{StaticResource SurfaceBrush}" 
                            CornerRadius="15" Padding="20" Margin="0,0,0,20">
                        <StackPanel>
                            <TextBlock Text="💡 Información Adicional" Style="{StaticResource SectionHeader}"/>

                            <StackPanel Orientation="Horizontal" Margin="0,0,0,10">
                                <TextBlock Text="📌" FontSize="14" Margin="0,2,8,0" VerticalAlignment="Top"/>
                                <TextBlock Text="Los eventos ayudan a organizar y categorizar las actividades dentro de FitSphere." 
                                           TextWrapping="Wrap"
                                           Foreground="{StaticResource TextBrushSecondary}"
                                           FontSize="12"/>
                            </StackPanel>

                            <StackPanel Orientation="Horizontal" Margin="0,0,0,10">
                                <TextBlock Text="🎯" FontSize="14" Margin="0,2,8,0" VerticalAlignment="Top"/>
                                <TextBlock Text="Utiliza descripciones claras para que los usuarios entiendan de qué trata el evento." 
                                           TextWrapping="Wrap"
                                           Foreground="{StaticResource TextBrushSecondary}"
                                           FontSize="12"/>
                            </StackPanel>

                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="⚡" FontSize="14" Margin="0,2,8,0" VerticalAlignment="Top"/>
                                <TextBlock Text="Los tipos de evento ayudan a filtrar y encontrar contenido específico más fácilmente." 
                                           TextWrapping="Wrap"
                                           Foreground="{StaticResource TextBrushSecondary}"
                                           FontSize="12"/>
                            </StackPanel>
                        </StackPanel>
                    </Border>
                </StackPanel>
            </ScrollViewer>

            <!-- Botones de acción -->
            <Border Grid.Row="2" Background="{StaticResource SurfaceBrush}" 
                    CornerRadius="0,0,15,15" Padding="30,20">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <!-- Información adicional -->
                    <StackPanel Grid.Column="0" VerticalAlignment="Center">
                        <TextBlock Text="💡 Los campos marcados con * son obligatorios" 
                                   Foreground="{StaticResource TextBrushSecondary}" 
                                   FontSize="12"/>
                        <TextBlock Text="El nombre y tipo de evento son campos requeridos" 
                                   Foreground="{StaticResource TextBrushSecondary}" 
                                   FontSize="11"
                                   Margin="0,2,0,0"/>
                    </StackPanel>

                    <!-- Botones de acción -->
                    <StackPanel Grid.Column="1" Orientation="Horizontal">
                        <Button x:Name="btnCancel" 
                                Content="Cancelar" 
                                Style="{StaticResource SecondaryButton}"
                                Margin="0,0,15,0"
                                Command="{Binding CancelCommand}"/>

                        <Button x:Name="btnSave" 
                                Content="{Binding IsEditMode, Converter={StaticResource BoolToTextConverter}, ConverterParameter='Actualizar|Crear'}"
                                Style="{StaticResource PrimaryButton}"
                                Command="{Binding SaveCommand}"/>
                    </StackPanel>
                </Grid>
            </Border>

            <!-- Loading overlay -->
            <Border Grid.RowSpan="3" 
                    Background="#80000000" 
                    CornerRadius="15"
                    x:Name="LoadingOverlay"
                    Visibility="{Binding IsLoading, Converter={StaticResource BoolToVis}}">
                <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                    <ProgressBar IsIndeterminate="True" 
                                 Width="200" Height="6" 
                                 Foreground="{StaticResource PrimaryBrush}"
                                 Background="{StaticResource AccentBrush}"/>
                    <TextBlock Text="{Binding IsEditMode, Converter={StaticResource BoolToTextConverter}, ConverterParameter='Actualizando evento...|Creando evento...'}"
                               Foreground="{StaticResource TextBrushPrimary}"
                               HorizontalAlignment="Center"
                               Margin="0,15,0,0"/>
                </StackPanel>
            </Border>
        </Grid>
    </Border>
</Window>